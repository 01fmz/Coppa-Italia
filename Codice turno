# Load necessary library
library(dplyr)

# Define teams and their strengths
teams <- c("Acireale", "AlbinoLeffe", "Altamura", "Angri", "Atalanta", "Bari", "Benevento", "Bologna", "Brescia", 
           "Brindisi", "Cagliari", "Carrarese", "Cassino", "Cesena", "Chieti", "Cittadella", "Como", "Crema", "Crotone", 
           "Cuneo", "Empoli", "Este", "Feralpisalò", "Fiorentina", "Folgore Caratese", "Genoa", "Gladiator", "Grosseto", 
           "Hellas Verona", "Inter", "Juventus", "Lazio", "Lecce", "Mantova", "Matera", "Milan", "Modena", "Monopoli", 
           "Montebelluna", "Monza", "Napoli", "Novara", "Nuorese", "Olbia", "Padova", "Paganese", "Palermo", "Parma", 
           "Pisa", "Pontedera", "Reggiana", "Rimini", "Roma", "Rovereto", "Sampdoria", "Solbiatese", "Spezia", "Südtirol", 
           "Taranto", "Torino", "Udinese", "Venezia", "Virtus Verona", "Vogherese")

strengths <- c(1, 1.1, 1.1, 1, 2.4, 1.2, 1.1, 2.3, 1.4, 1, 1.8, 1.1, 1, 1.1, 1, 1.3, 1.5, 1, 1.1, 0.95, 1.6, 1, 1, 2.1, 
               1, 1.8, 1, 1.1, 1.6, 2.8, 2.5, 2.1, 1.7, 1.2, 1, 2.5, 1.4, 1.1, 1, 1.7, 2.3, 1.1, 0.95, 1, 1.1, 1, 1.4, 1.4, 
               1.3, 1.1, 1.2, 1.1, 2.1, 1.1, 1.2, 0.9, 1.2, 1.2, 1, 2.1, 1.9, 1.6, 1.1, 1.1)

# Function to draw matchups
draw_matches <- function(teams) {
  shuffled_teams <- sample(teams)
  matches <- matrix(shuffled_teams, ncol = 2, byrow = TRUE)
  return(matches)
}

# Function to generate scores
generate_scores <- function(home_strength, away_strength) {
  avg_goals <- 2.25 + abs(home_strength - away_strength)
  home_goals <- rpois(1, avg_goals * (home_strength / (home_strength + away_strength)))
  away_goals <- rpois(1, avg_goals * (away_strength / (home_strength + away_strength)))
  return(c(home_goals, away_goals))
}

# Function to determine winner
determine_winner <- function(home_goals, away_goals, home_team, away_team) {
  if (home_goals > away_goals) {
    return(home_team)
  } else if (away_goals > home_goals) {
    return(away_team)
  } else {
    # Coin flip for draw
    winner <- sample(c(home_team, away_team), 1)
    return(winner)
  }
}

# Function to simulate a round
simulate_round <- function(teams, strengths) {
  matches <- draw_matches(teams)
  results <- data.frame(HomeTeam = character(), HomeGoals = integer(), AwayGoals = integer(), 
                        AwayTeam = character(), Winner = character(), WinnerStrength = numeric())
  
  for (i in 1:nrow(matches)) {
    home_team <- matches[i, 1]
    away_team <- matches[i, 2]
    home_strength <- 1.1 * strengths[match(home_team, teams)]
    away_strength <- strengths[match(away_team, teams)]
    
    scores <- generate_scores(home_strength, away_strength)
    home_goals <- scores[1]
    away_goals <- scores[2]
    winner <- determine_winner(home_goals, away_goals, home_team, away_team)
    winner_strength <- strengths[match(winner, teams)]
    
    results <- rbind(results, data.frame(HomeTeam = home_team, HomeGoals = home_goals, 
                                         AwayGoals = away_goals, AwayTeam = away_team, 
                                         Winner = winner, WinnerStrength = winner_strength))
  }
  
  print(results)
  
  return(results)
}

# Simulate the round
results <- simulate_round(teams, strengths)

# Save the results to a CSV file
write.csv(results, file = "round_of_64_results.csv", row.names = FALSE)

# View the results
View(results)
